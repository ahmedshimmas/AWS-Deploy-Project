version: '3.9'

services:
  web:
    build: .
    container_name: devops-web
    command: >
      sh -c "python3 manage.py makemigrations app &&
             python3 manage.py migrate &&
             python3 manage.py collectstatic --noinput &&
             gunicorn project.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    container_name: devops-database
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  nginx:
    image: nginx:stable-alpine
    container_name: devops-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
    depends_on:
      - web

  redis:
    image: redis:7
    container_name: devops-redis
    restart: always
    ports:
      - "6378:6379"

  celery:
    build: .
    container_name: devops-celery
    command: celery -A project worker --loglevel=info
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    
  celery-beat:
    build: .
    container_name: devops-celery-beat
    command: celery -A project beat --loglevel=info
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  static_volume:
  media_volume:
